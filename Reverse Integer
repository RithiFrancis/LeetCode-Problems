Problem :

Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

Constraints:

-231 <= x <= 231 - 1

Solution:

class Solution {
    public int reverse(int x) {
        long reversed_num = 0;
        while(x != 0){
            int rem = x % 10;
            reversed_num = reversed_num * 10 + rem;
            x = x / 10;
        }
        if(reversed_num > Integer.MAX_VALUE || reversed_num < Integer.MIN_VALUE){
            return 0;
        }
        if(x < 0){
            return (int) (-1*reversed_num);
        }
        return (int)reversed_num;
    }
}
